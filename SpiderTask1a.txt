#include <stdio.h>
void merge(char arr[], int l, int m, int r) 
{ 
    int i, j, k; 
    int n1 = m - l + 1; 
    int n2 = r - m; 
  
    char L[n1], R[n2]; 
  
    for (i = 0; i < n1; i++) 
        L[i] = arr[l + i]; 
    for (j = 0; j < n2; j++) 
        R[j] = arr[m + 1 + j]; 
  
    i = 0;  
    j = 0; 
    k = l; 
    while (i < n1 && j < n2) { 
        if (L[i] <= R[j]) { 
            arr[k] = L[i]; 
            i++; 
        } 
        else { 
            arr[k] = R[j]; 
            j++; 
        } 
        k++; 
    } 
  
    while (i < n1) { 
        arr[k] = L[i]; 
        i++; 
        k++; 
    } 
  
    while (j < n2) { 
        arr[k] = R[j]; 
        j++; 
        k++; 
    } 
} 
  

void mergeSort(char arr[], int l, int r) 
{ 
    if (l < r) { 
        
        int m = l + (r - l) / 2; 
  
        mergeSort(arr, l, m); 
        mergeSort(arr, m + 1, r); 
  
        merge(arr, l, m, r); 
    } 
} 
int bintodec(char arr[],int l){
    int dec=0,base=1;
    for(int i=l-1;i>=0;i--)
    {
        if(arr[i]=='1')
        {dec=dec+base;}
        base=base*2;
    }
    return dec;
}
void dectobin(int n){
    int binaryNum[32]; 
    int i = 0; 
    while (n > 0) { 
        binaryNum[i] = n % 2; 
        n = n / 2; 
        i++; 
    } 
    for (int j = i - 1; j >= 0; j--) 
        printf("%d",binaryNum[j]);
} 


void main()
{
    int n,i;
    char s[100000],s1[100000];
    scanf("%d",&n);
    scanf("%s",s);
    for(int i=0;i<n;i++)
    s1[i]=s[i];
    mergeSort(s,0,n-1);
   if((s[n-2]=='0')||(s[0]=='1'))
    {
        printf("-1");
    }
  else  
   {int a;
   a=bintodec(s1,n);
 
   dectobin(a-1);
   printf(" ");
   dectobin(a+1);
   
   }
}