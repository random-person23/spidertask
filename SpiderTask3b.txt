#include <iostream>
using namespace std;

void merge(int arr[], int l, int m, int r) 
{ 
    int i, j, k; 
    int n1 = m - l + 1; 
    int n2 = r - m; 
  
    
    int L[n1], R[n2]; 
  
   
    for (i = 0; i < n1; i++) 
        L[i] = arr[l + i]; 
    for (j = 0; j < n2; j++) 
        R[j] = arr[m + 1 + j]; 
  
    
    i = 0; 
    j = 0; 
    k = l; 
    while (i < n1 && j < n2) { 
        if (L[i] <= R[j]) { 
            arr[k] = L[i]; 
            i++; 
        } 
        else { 
            arr[k] = R[j]; 
            j++; 
        } 
        k++; 
    } 
  
   
    while (i < n1) { 
        arr[k] = L[i]; 
        i++; 
        k++; 
    } 
  
    
    while (j < n2) { 
        arr[k] = R[j]; 
        j++; 
        k++; 
    } 
} 
  

void mergeSort(int arr[], int l, int r) 
{ 
    if (l < r) { 
       
        int m = l + (r - l) / 2; 
  
       
        mergeSort(arr, l, m); 
        mergeSort(arr, m + 1, r); 
  
        merge(arr, l, m, r); 
    } 
} 
int main(){
	int n,m,i,j=0;
	int a[100000];
	long int sum=0,max;
	cin>>n>>m;
	for(i=0;i<m;i++)
	cin>>a[i];
	if(n==1)
	{
		for(i=0;i<m;i++)
		sum+=a[i];
		cout<<sum;
	}
	else
	{
		mergeSort(a,0,m-1);
		while(m>n)
		{
			for(i=0;(i+1)<=m/2;i++)
			a[i]+=a[m-1-i];
			if(m%2==0)
			m=m/2;
			else
			m=(m+1)/2;
			
		}
		if(a[0]<a[1])
		cout<<a[0];
		else
		cout<<a[1];
	}
   
	return 0;
}